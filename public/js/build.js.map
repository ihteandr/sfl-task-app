{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","frontend/js/classes/Component.js","frontend/js/classes/HttpProvider.js","frontend/js/classes/Subject.js","frontend/js/components/cities-panel.js","frontend/js/components/day-panel.js","frontend/js/components/weather-panel.js","frontend/js/index.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\r\n\r\n/*\r\n* SFLComponent\r\n*\r\n* Constructor take options\r\n* options.event\r\n*     {\r\n*       'event selector': 'eventHandler'\r\n*     }\r\n* options.container\r\n     DOMNode or selector\r\n*\r\n* */\r\nexport default class SFLComponent{\r\n    constructor(options){\r\n        this.events = options.events;\r\n        this.container = typeof options.container === 'string' ? document.querySelector(options.container) : options.container;\r\n        this.prepareEventsListeners();\r\n    }\r\n    prepareEventsListeners(){\r\n        for(let key in this.events){\r\n            if(this.events.hasOwnProperty(key)){\r\n                this[this.events[key]] = this[this.events[key]].bind(this);\r\n            }\r\n        }\r\n    }\r\n    attachEvents(){\r\n        for(let key in this.events){\r\n            if(this.events.hasOwnProperty(key)){\r\n                let keyParts = key.split(' ')\r\n                let event = keyParts[0];\r\n                let selector = keyParts.slice(1).join(' ');\r\n                let elements = this.container.querySelectorAll(selector);\r\n                for(let i = 0; i < elements.length; i++){\r\n                    elements[i].addEventListener(event, this[this.events[key]]);    \r\n                }\r\n            }\r\n        }\r\n    }\r\n    dettachEvents(){\r\n        for(let key in this.events){\r\n            if(this.events.hasOwnProperty(key)){\r\n                let keyParts = key.split(' ');\r\n                let event = keyParts[0];\r\n                let selector = keyParts.slice(1).join(' ');\r\n                let elements = this.container.querySelectorAll(selector);\r\n                for(let i = 0; i < elements.length; i++){\r\n                    elements[i].removeEventListener(event, this[this.events[key]]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","\r\nexport default class HttpProvider{\r\n    doGet(path, options){\r\n        return new Promise((resolve, reject)=>{\r\n            var xhr = new XMLHttpRequest();\r\n            let query = '';\r\n            for(var i in options){\r\n                query += i + '=' + options[i] + '&';\r\n            }\r\n            xhr.open('GET', path + '?' + query, true);\r\n\r\n            xhr.send();\r\n\r\n            xhr.onreadystatechange = function() {\r\n                if (xhr.readyState != 4) return;\r\n                if (xhr.status === 200) {\r\n                    resolve(JSON.parse(xhr.responseText));\r\n                } else {\r\n                    reject(xhr.responseText);\r\n                }\r\n\r\n            }\r\n        })\r\n    }\r\n}","export default class Subject{\r\n    constructor(){\r\n        this.subcribers = [];\r\n    }\r\n    subscribe(func){\r\n        this.subcribers.push(func);\r\n        return {\r\n            unsubscribe: ()=>{\r\n                this.subcribers.splice(this.subcribers.indexOf(func), 1);\r\n            }\r\n        }\r\n    }\r\n    next(data){\r\n        this.subcribers.forEach((subscriber)=>{\r\n            subscriber(data);\r\n        });\r\n    }\r\n}\r\n\r\n","import SFLComponent from '../classes/Component';\r\nimport Subject from '../classes/Subject';\r\n\r\nexport default class CitiesPanelComponent extends SFLComponent{\r\n    constructor(options){\r\n        let events = {\r\n            'change .cities': 'selectCity'\r\n        };\r\n        super(Object.assign(options, {\r\n            events: events\r\n        }));\r\n        this.cityChangeStream = new Subject();\r\n        this.selectedCity = null;\r\n        this.citiesData = ['Moscow', 'Yerevan', 'London', 'Kiev', 'Amsterdam'];\r\n\r\n    }\r\n    selectSelectCurrentCity(){\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position)=>{\r\n                let geocoder = new google.maps.Geocoder();\r\n                let lat = position.coords.latitude;\r\n                let lng = position.coords.longitude;\r\n                let latlng = new google.maps.LatLng(lat, lng);\r\n                geocoder.geocode({'latLng': latlng}, (results, status)=> {\r\n                    if (status == google.maps.GeocoderStatus.OK) {\r\n                        let city;\r\n                        if (results[1]) {\r\n                            //formatted address\r\n                            //find country name\r\n                            for (var i=0; i<results[0].address_components.length; i++) {\r\n                                for (var b=0;b<results[0].address_components[i].types.length;b++) {\r\n\r\n                                    //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate\r\n                                    if (results[0].address_components[i].types[b] == \"administrative_area_level_1\") {\r\n                                        //this is the object you are looking for\r\n                                        city= results[0].address_components[i];\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.selectedCity = city.short_name;\r\n                            this.cityChangeStream.next(this.selectedCity);\r\n                            this.container.querySelector('select').value = this.selectedCity;\r\n                        } else {\r\n                            console.log(\"No results found\");\r\n                        }\r\n                    } else {\r\n                        onsole.log(\"Geocoder failed due to: \" + status);\r\n                    }\r\n                });\r\n            }, (err)=>{\r\n                console.error(err);\r\n            });\r\n        }\r\n    }\r\n    selectCity(event){\r\n        this.selectedCity = event.target.value;\r\n        this.cityChangeStream.next(this.selectedCity);\r\n    }\r\n    render(){\r\n        this.dettachEvents();\r\n        this.container.innerHTML = '';\r\n        let selectEl = document.createElement('select');\r\n        selectEl.classList.add('cities');\r\n        this.citiesData.forEach((city)=>{\r\n            let optionEl = document.createElement('option');\r\n            optionEl.setAttribute('value', city);\r\n            optionEl.innerText = city;\r\n            selectEl.appendChild(optionEl);\r\n        });\r\n        this.container.appendChild(selectEl);\r\n        this.attachEvents();\r\n    }\r\n}","import SFLComponent from '../classes/Component';\r\nimport Subject from '../classes/Subject';\r\n\r\nexport default class DayPanelComponent extends SFLComponent{\r\n    constructor(options){\r\n        let events = {\r\n            'click .date': 'selectDate'\r\n        };\r\n        super(Object.assign(options, {\r\n            events: events\r\n        }));\r\n        this.dayChangeStream = new Subject();\r\n        this.selectedDay = null;\r\n\r\n    }\r\n    getToday(){\r\n        let today = new Date();\r\n        today.setHours(0);\r\n        today.setMinutes(0);\r\n        today.setMinutes(0);\r\n        today.setMilliseconds(0);\r\n        return today;\r\n    }\r\n    selectToday(){\r\n        let today = this.getToday();\r\n        this.unselectAll();\r\n        this.selectedDay = today.getTime();\r\n        this.container.querySelector('.date[date=\"' + today.getTime() + '\"]').classList.add('date_selected');\r\n        this.dayChangeStream.next(this.selectedDay);\r\n    }\r\n    unselectAll(){\r\n        let dayElements = this.container.querySelectorAll('.date');\r\n        for(let i = 0; i < dayElements.length; i++){\r\n            dayElements[i].classList.remove('date_selected');\r\n        }\r\n    }\r\n    selectDate(event){\r\n        this.unselectAll();\r\n        event.currentTarget.classList.add('date_selected');\r\n        this.selectedDay = parseInt(event.currentTarget.getAttribute('date'));\r\n        this.dayChangeStream.next(this.selectedDay);\r\n    }\r\n    getUpcomingDates(){\r\n        let today = this.getToday();\r\n        let upcomingDates = [];\r\n        for(var i = 0; i < 7; i++){\r\n            let date = new Date(today.getTime() + i*24*60*60*1000);\r\n            upcomingDates.push({\r\n                day: date.getDate(),\r\n                weekDay: [\r\n                    'Sunday',\r\n                    'Monday',\r\n                    'Tuesday',\r\n                    'Wednesday',\r\n                    'Thursday',\r\n                    'Friday',\r\n                    'Saturday'\r\n                ][date.getDay()],\r\n                time: date.getTime(),\r\n                month: [\r\n                    \"January\",\r\n                    \"February\",\r\n                    \"March\",\r\n                    \"April\",\r\n                    \"May\",\r\n                    \"June\",\r\n                    \"July\",\r\n                    \"August\",\r\n                    \"September\",\r\n                    \"October\",\r\n                    \"November\",\r\n                    \"December\"\r\n                ][date.getMonth()]\r\n            })\r\n        }\r\n        return upcomingDates;\r\n    }\r\n    render(){\r\n        this.dettachEvents();\r\n        this.container.innerHTML = '';\r\n        let dates = this.getUpcomingDates();\r\n        dates.forEach((date)=>{\r\n            let dateEl = document.createElement('div'),\r\n                dayLabel = document.createElement('label'),\r\n                monthLabel = document.createElement('label'),\r\n                weekDayLabel = document.createElement('label');\r\n            dateEl.classList.add('date');\r\n            dayLabel.classList.add('date_day');\r\n            monthLabel.classList.add('date_month');\r\n            weekDayLabel.classList.add('date_week');\r\n            dayLabel.innerText = date.day;\r\n            monthLabel.innerText = date.month;\r\n            weekDayLabel.innerText = date.weekDay;\r\n            dateEl.setAttribute('date', date.time);\r\n            dateEl.appendChild(dayLabel);\r\n            dateEl.appendChild(monthLabel);\r\n            dateEl.appendChild(weekDayLabel);\r\n            this.container.appendChild(dateEl);\r\n        });\r\n        this.attachEvents();\r\n    }\r\n}","import SFLComponent from '../classes/Component';\r\nimport Subject from '../classes/Subject';\r\nimport HttpProvider from '../classes/HttpProvider';\r\nexport default class WeatherPanelComponent extends SFLComponent{\r\n    constructor(options){\r\n        super(Object.assign(options, {}));\r\n        this.http = new HttpProvider();\r\n        this.dayChangeStream = new Subject();\r\n        this.selectedOptions = {\r\n            city: null,\r\n            date: null\r\n        };\r\n        this.fetchedData = null;\r\n        this.checkIfCanFetchWeatherData = this.checkIfCanFetchWeatherData.bind(this);\r\n    }\r\n    checkIfNeedUpdateDisplay(){\r\n        if(this.selectedOptions.date){\r\n            this.render();\r\n        }\r\n    }\r\n    checkIfCanFetchWeatherData(){\r\n        if(this.selectedOptions.city){\r\n            this.fetchWeatherData();\r\n        }\r\n    }\r\n    fetchWeatherData(){\r\n        this.http.doGet('https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast', {\r\n            appid: 'a9bcf4f4899aaab6b7194e3f674f162b',\r\n            q: this.selectedOptions.city,\r\n            units: 'metric'\r\n        }).then((data)=>{\r\n            this.fetchedData = data;\r\n            this.checkIfNeedUpdateDisplay();\r\n        }, (err)=>{\r\n            console.error(err);\r\n        })\r\n    }\r\n    render(){\r\n        this.dettachEvents();\r\n        this.container.innerHTML = '';\r\n        let display = document.createElement('h1');\r\n        if(this.fetchedData && this.selectedOptions.date){\r\n            //find weather data for selected date\r\n            let data = this.fetchedData.list.filter((data)=>{\r\n                let time = this.selectedOptions.date.getTime();\r\n                return data.dt*1000 > time && time < data.dt*1000 + 23.9*60*60*1000;\r\n            });\r\n            let sum = 0;\r\n\r\n            data.forEach((singleData)=>{\r\n                sum+=singleData.main.temp;\r\n            });\r\n            if(data.length > 0){\r\n                display.innerText = (sum/data.length).toFixed(1) + 'C';\r\n            } else {\r\n                display.innerText = 'Unknown';\r\n            }\r\n        }\r\n\r\n        this.container.appendChild(display);\r\n        this.attachEvents();\r\n    }\r\n}","import DayPanelComponent from './components/day-panel';\r\nimport CitiesPanelComponent from './components/cities-panel';\r\nimport WeatherPanelComponent from './components/weather-panel';\r\nwindow.addEventListener('load', ()=>{\r\n    console.log('ok');\r\n    let dayPanel = new DayPanelComponent({\r\n        container: '.dates-panel'\r\n    });\r\n    let citiesPanel = new CitiesPanelComponent({\r\n        container: '.cities-panel'\r\n    });\r\n    let weatherPanel = new WeatherPanelComponent({\r\n        container: '.weather-panel'\r\n    });\r\n    dayPanel.dayChangeStream.subscribe((time)=>{\r\n        weatherPanel.selectedOptions.date = new Date(time);\r\n        weatherPanel.checkIfNeedUpdateDisplay();\r\n    });\r\n    citiesPanel.cityChangeStream.subscribe((city)=>{\r\n        weatherPanel.selectedOptions.city = city;\r\n        weatherPanel.checkIfCanFetchWeatherData();\r\n    });\r\n    dayPanel.render();\r\n    citiesPanel.render();\r\n    citiesPanel.selectSelectCurrentCity();\r\n    dayPanel.selectToday();\r\n});"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}